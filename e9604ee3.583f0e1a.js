(window.webpackJsonp=window.webpackJsonp||[]).push([[725],{797:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var r=a(3),n=a(8),b=(a(0),a(871)),l={id:"_user_.user",title:"Class: User",sidebar_label:"User"},c={unversionedId:"api/classes/_user_.user",id:"version-0.13.7/api/classes/_user_.user",isDocsHomePage:!1,title:"Class: User",description:'"User".User',source:"@site/clientlib_versioned_docs/version-0.13.7/api/classes/_user_.user.md",slug:"/api/classes/_user_.user",permalink:"/clientlib/0.13.7/api/classes/_user_.user",editUrl:"https://github.com/trustlines-protocol/tl-dev-docs/edit/master/clientlib_versioned_docs/version-0.13.7/api/classes/_user_.user.md",version:"0.13.7",sidebar_label:"User",sidebar:"version-0.13.7/clientlib",previous:{title:"Class: Trustline",permalink:"/clientlib/0.13.7/api/classes/_trustline_.trustline"},next:{title:"Class: UserInformation",permalink:"/clientlib/0.13.7/api/classes/_userinformation_.userinformation"}},i=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Accessors",id:"accessors",children:[{value:"address",id:"address",children:[]}]},{value:"Methods",id:"methods",children:[{value:"create",id:"create",children:[]},{value:"createLink",id:"createlink",children:[]},{value:"deployIdentity",id:"deployidentity",children:[]},{value:"encryptToSerializedKeystore",id:"encrypttoserializedkeystore",children:[]},{value:"exportPrivateKey",id:"exportprivatekey",children:[]},{value:"getAddress",id:"getaddress",children:[]},{value:"getBalance",id:"getbalance",children:[]},{value:"getWalletData",id:"getwalletdata",children:[]},{value:"isIdentityDeployed",id:"isidentitydeployed",children:[]},{value:"loadFrom",id:"loadfrom",children:[]},{value:"recoverFromEncryptedKeystore",id:"recoverfromencryptedkeystore",children:[]},{value:"recoverFromPrivateKey",id:"recoverfromprivatekey",children:[]},{value:"recoverFromSeed",id:"recoverfromseed",children:[]},{value:"showSeed",id:"showseed",children:[]},{value:"signMsgHash",id:"signmsghash",children:[]}]}],s={rightToc:i};function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/modules/_user_"}),'"User"'),".User"),Object(b.b)("p",null,"The ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/classes/_user_.user"}),"User")," class contains all user related functions, which also include wallet related methods.\nIt is meant to be called via a ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/classes/_tlnetwork_.tlnetwork"}),"TLNetwork")," instance like:"),Object(b.b)("pre",null,Object(b.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'const tlNetwork = new TLNetwork(...)\n\n// Create user\ntlNetwork.user.create().then(\n newUser => console.log("New user:", newUser)\n)\n')),Object(b.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"User"))),Object(b.b)("h2",{id:"accessors"},"Accessors"),Object(b.b)("h3",{id:"address"},"address"),Object(b.b)("p",null,"\u2022 get ",Object(b.b)("strong",{parentName:"p"},"address"),"(): string"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L44"}),"src/User.ts:44"))),Object(b.b)("p",null,"Checksummed Ethereum address of currently loaded wallet."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," string"),Object(b.b)("h2",{id:"methods"},"Methods"),Object(b.b)("h3",{id:"create"},"create"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"create"),"(): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L59"}),"src/User.ts:59"))),Object(b.b)("p",null,"Creates a new random wallet based on the configured ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/modules/_typings_#wallettype"}),"WalletType"),"."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,"the wallet data that can be used with ",Object(b.b)("inlineCode",{parentName:"p"},"loadFrom")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"createlink"},"createLink"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"createLink"),"(",Object(b.b)("inlineCode",{parentName:"p"},"options"),": { ","[key:string]",": string; customBase?: string ; name?: string  }): Promise","<","string>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L208"}),"src/User.ts:208"))),Object(b.b)("p",null,"Returns a shareable link which can be send to other users.\nContains username and address."),Object(b.b)("h4",{id:"parameters"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"options")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"{ ","[key:string]",": string; customBase?: string ; name?: string  }"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"any additional options that we should hang on the URL        options.customBase - convention for a custom base for the URL        options.name - convention for a name for the user        options","[key]"," - any other additional options that should be added to the URL")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","string>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"deployidentity"},"deployIdentity"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"deployIdentity"),"(): Promise","<","string>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L81"}),"src/User.ts:81"))),Object(b.b)("p",null,"Deploys a new identity on the chain if the configured ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/modules/_typings_#wallettype"}),"WalletType")," is ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/modules/_typings_#wallettypeidentity"}),"WalletTypeIdentity")," and returns the transaction hash."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","string>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"encrypttoserializedkeystore"},"encryptToSerializedKeystore"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"encryptToSerializedKeystore"),"(",Object(b.b)("inlineCode",{parentName:"p"},"tlWalletData"),": ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),", ",Object(b.b)("inlineCode",{parentName:"p"},"password?"),": string ","|"," (progress: number) => void, ",Object(b.b)("inlineCode",{parentName:"p"},"progressCallback?"),": (progress: number) => void): Promise","<","string>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L134"}),"src/User.ts:134"))),Object(b.b)("p",null,"Encrypts and serializes the given wallet data."),Object(b.b)("h4",{id:"parameters-1"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"tlWalletData")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Wallet data to encrypt and serialize.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"password?")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string ","|"," (progress: number) => void"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Optional password to encrypt wallet with.                 If not specified default password is used.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"progressCallback?")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"(progress: number) => void"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Optional encryption progress callback.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","string>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"exportprivatekey"},"exportPrivateKey"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"exportPrivateKey"),"(): Promise","<","string>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L156"}),"src/User.ts:156"))),Object(b.b)("p",null,"Returns the private key of loaded user."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","string>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getaddress"},"getAddress"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getAddress"),"(): Promise","<","string>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L51"}),"src/User.ts:51"))),Object(b.b)("p",null,"Async ",Object(b.b)("inlineCode",{parentName:"p"},"address")," getter for loaded user."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","string>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getbalance"},"getBalance"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getBalance"),"(): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.amount"}),"Amount"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L103"}),"src/User.ts:103"))),Object(b.b)("p",null,"Returns ETH balance of loaded user."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.amount"}),"Amount"),">"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getwalletdata"},"getWalletData"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getWalletData"),"(): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L74"}),"src/User.ts:74"))),Object(b.b)("p",null,"Returns the wallet data. Can be used with ",Object(b.b)("inlineCode",{parentName:"p"},"loadFrom")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"isidentitydeployed"},"isIdentityDeployed"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"isIdentityDeployed"),"(): Promise","<","boolean>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L88"}),"src/User.ts:88"))),Object(b.b)("p",null,"Returns a boolean if a new identity already has been deployed for the loaded user."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","boolean>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"loadfrom"},"loadFrom"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"loadFrom"),"(",Object(b.b)("inlineCode",{parentName:"p"},"tlWalletData"),": ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),"): Promise","<","void>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L67"}),"src/User.ts:67"))),Object(b.b)("p",null,"Loads the given wallet data into the library"),Object(b.b)("h4",{id:"parameters-2"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"tlWalletData")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"data of the wallet to load")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","void>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"recoverfromencryptedkeystore"},"recoverFromEncryptedKeystore"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"recoverFromEncryptedKeystore"),"(",Object(b.b)("inlineCode",{parentName:"p"},"serializedEncryptedKeystore"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"password"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"progressCallback?"),": (progress: number) => any): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L168"}),"src/User.ts:168"))),Object(b.b)("p",null,"Recovers wallet data from a serialized encrypted JSON keystore string\n(e.g. as returned by ",Object(b.b)("inlineCode",{parentName:"p"},"encryptToSerializedKeystore"),")."),Object(b.b)("h4",{id:"parameters-3"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"serializedEncryptedKeystore")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Serialized standard JSON keystore.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"password")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Password to decrypt serialized JSON keystore with.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"progressCallback?")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"(progress: number) => any"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Optional progress callback to call on encryption progress.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,"the wallet data. Can be used with ",Object(b.b)("inlineCode",{parentName:"p"},"loadFrom")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"recoverfromprivatekey"},"recoverFromPrivateKey"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"recoverFromPrivateKey"),"(",Object(b.b)("inlineCode",{parentName:"p"},"privateKey"),": string): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L194"}),"src/User.ts:194"))),Object(b.b)("p",null,"Recovers wallet data from private key."),Object(b.b)("h4",{id:"parameters-4"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"privateKey")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Private key to recover wallet data from.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,"wallet data. Can be used with ",Object(b.b)("inlineCode",{parentName:"p"},"loadFrom")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"recoverfromseed"},"recoverFromSeed"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"recoverFromSeed"),"(",Object(b.b)("inlineCode",{parentName:"p"},"seed"),": string): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L185"}),"src/User.ts:185"))),Object(b.b)("p",null,"Recovers wallet data from 12 word seed phrase."),Object(b.b)("h4",{id:"parameters-5"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"seed")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"12 word seed phrase string.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.tlwalletdata"}),"TLWalletData"),">"),Object(b.b)("p",null,"the wallet data. Can be used with ",Object(b.b)("inlineCode",{parentName:"p"},"loadFrom")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"showseed"},"showSeed"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"showSeed"),"(): Promise","<","string>"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L149"}),"src/User.ts:149"))),Object(b.b)("p",null,"Returns the 12 word seed of loaded user."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<","string>"),Object(b.b)("hr",null),Object(b.b)("h3",{id:"signmsghash"},"signMsgHash"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"signMsgHash"),"(",Object(b.b)("inlineCode",{parentName:"p"},"msgHash"),": string): Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.signature"}),"Signature"),">"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(r.a)({parentName:"em"},{href:"https://github.com/trustlines-protocol/clientlib/blob/a897659/src/User.ts#L96"}),"src/User.ts:96"))),Object(b.b)("p",null,"Digitally signs a message hash with the currently loaded user/wallet."),Object(b.b)("h4",{id:"parameters-6"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"msgHash")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Hash of message that should be signed.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," Promise","<",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/clientlib/0.13.7/api/interfaces/_typings_.signature"}),"Signature"),">"))}p.isMDXComponent=!0},871:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return j}));var r=a(0),n=a.n(r);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},b=Object.keys(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),p=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},o=function(e){var t=p(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,b=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),o=p(a),d=r,j=o["".concat(l,".").concat(d)]||o[d]||O[d]||b;return a?n.a.createElement(j,c(c({ref:t},s),{},{components:a})):n.a.createElement(j,c({ref:t},s))}));function j(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=a.length,l=new Array(b);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var s=2;s<b;s++)l[s]=a[s];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);