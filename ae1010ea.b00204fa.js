(window.webpackJsonp=window.webpackJsonp||[]).push([[351],{422:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(8),i=(n(0),n(611)),o={title:"Set up trustline"},s={unversionedId:"guides/setup_trustline",id:"guides/setup_trustline",isDocsHomePage:!1,title:"Set up trustline",description:"To set up a trustline, make sure that a user instance is loaded into the library.",source:"@site/clientlib/guides/setup_trustline.md",slug:"/guides/setup_trustline",permalink:"/clientlib/next/guides/setup_trustline",editUrl:"https://github.com/trustlines-protocol/tl-dev-docs/edit/master/clientlib/guides/setup_trustline.md",version:"current",sidebar:"clientlib",previous:{title:"Discover currency networks",permalink:"/clientlib/next/guides/discover_networks"},next:{title:"Transfer",permalink:"/clientlib/next/guides/transfer"}},c=[{value:"1. Request for establishing a trustline",id:"1-request-for-establishing-a-trustline",children:[]},{value:"2. Accepting a trustline request",id:"2-accepting-a-trustline-request",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"To set up a trustline, make sure that a user instance is loaded into the library."),Object(i.b)("h3",{id:"1-request-for-establishing-a-trustline"},"1. Request for establishing a trustline"),Object(i.b)("p",null,"Trustlines consist of bi-directional credit agreements.\nThat means, that they have to be accepted by both parties.\nThe first step to establish a trustline is therefore to create an initial request or proposal to the counterparty."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'const tlNetwork1 = new TLNetwork()\n\n// Create and/or load user 1 ...\n\nconst networkAddress = "0xf8E191d2cd72Ff35CB8F012685A29B31996614EA"\nconst counterpartyAddress = "0xcE2D6f8bc55A61428D32947bC9Bc7F2DE1640B18"\n\n// Prepare a transaction to request a trustline update\nconst {\n  rawTx,\n  ethFees,\n  delegationFees,\n} = await tlNetwork1.trustline.prepareUpdate(\n  networkAddress,\n  counterpartyAddress,\n  100, // Proposed credit limit given to counterparty\n  200 // Proposed credit limit received from counterparty\n)\nconsole.log("Transaction fees: ", ethFees)\nconsole.log("Delegation fees: ", delegationFees)\n\n// Sign and relay the transaction\nconst txHash = await tlNetwork1.trustline.confirm(rawTx)\nconsole.log("Transaction hash: ", txHash)\n')),Object(i.b)("p",null,"The initiator creates a request where he is willing to ",Object(i.b)("strong",{parentName:"p"},"lend")," a maximal denomination of ",Object(i.b)("inlineCode",{parentName:"p"},"100")," to the user with the address ",Object(i.b)("inlineCode",{parentName:"p"},"counterpartyAddress")," in the currency network with the address ",Object(i.b)("inlineCode",{parentName:"p"},"networkAddress"),".\nHe also proposes that he is willing to ",Object(i.b)("strong",{parentName:"p"},"owe")," a maximal denomination of ",Object(i.b)("inlineCode",{parentName:"p"},"200")," to the counterparty.\nIf the ",Object(i.b)("inlineCode",{parentName:"p"},"walletType")," is ",Object(i.b)("inlineCode",{parentName:"p"},"ethers"),", ",Object(i.b)("inlineCode",{parentName:"p"},"delegationFees")," are ",Object(i.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(i.b)("h3",{id:"2-accepting-a-trustline-request"},"2. Accepting a trustline request"),Object(i.b)("p",null,"In the next step the counterparty has to accept the request. Note that in the example below the loaded user is the counterparty of step 1."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'const tlNetwork2 = new TLNetwork()\n\n// Create and/or load user 2 ...\n\nconst networkAddress = "0xf8E191d2cd72Ff35CB8F012685A29B31996614EA"\n\n// Retrieve latest request from step 1\nconst requests = await tlNetwork2.trustline.getRequests(networkAddress)\nconst latestRequest = requests[requests.length - 1]\nconst initiatorAddress = latestRequest.from\nconst creditlineGivenToInitiator = latestRequest.received.value\nconst creditlineReceivedFromInitiator = latestRequest.given.value\n\nconst { rawTx } = await tlNetwork2.trustline.prepareAccept(\n  networkAddress,\n  initiatorAddress,\n  creditlineGivenToInitiator,\n  creditlineReceivedFromInitiator\n)\n\n// sign and relay the transaction\nconst txHash = await tlNetwork2.trustline.confirm(rawTx)\nconsole.log("Transaction hash: ", txHash)\n')),Object(i.b)("p",null,"The counterparty of step 1 first fetches all trustline requests in the currency network. The ",Object(i.b)("inlineCode",{parentName:"p"},"prepareAccept")," function is then called where the attributes ",Object(i.b)("inlineCode",{parentName:"p"},"given")," and ",Object(i.b)("inlineCode",{parentName:"p"},"received")," have to be from the point of view of the caller. So in our case the counterparty or receiver of the initial request."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"NOTE: All numerical values have to be provided in their largest unit. For example, if the currency network has two decimals, the values have to be in a format like ",Object(i.b)("inlineCode",{parentName:"strong"},"1.25"),".")))}u.isMDXComponent=!0},611:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,h=p["".concat(o,".").concat(b)]||p[b]||d[b]||i;return n?a.a.createElement(h,s(s({ref:t},l),{},{components:n})):a.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);