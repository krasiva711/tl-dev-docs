(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{157:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),o=n(8),i=(n(0),n(872)),r={title:"Running the Relay with a TLBC-node (with docker)",sidebar_label:"Running the Relay with a TLBC-node (with docker)"},c={unversionedId:"tutorials/trustlines_tlbc_system",id:"version-0.21.0/tutorials/trustlines_tlbc_system",isDocsHomePage:!1,title:"Running the Relay with a TLBC-node (with docker)",description:"All commands in this tutorial should be run from the /docker/trustlines/tlbc folder.",source:"@site/relay_versioned_docs/version-0.21.0/tutorials/trustlines_tlbc_system.md",slug:"/tutorials/trustlines_tlbc_system",permalink:"/relay/tutorials/trustlines_tlbc_system",editUrl:"https://github.com/trustlines-protocol/tl-dev-docs/edit/master/relay_versioned_docs/version-0.21.0/tutorials/trustlines_tlbc_system.md",version:"0.21.0",sidebar_label:"Running the Relay with a TLBC-node (with docker)",sidebar:"version-0.21.0/Relay",previous:{title:"Running the Trustlines system",permalink:"/relay/tutorials/trustlines_system"},next:{title:"Trustlines Network Rest API",permalink:"/relay/api/introduction"}},l=[{value:"Services",id:"services",children:[]},{value:"Setup",id:"setup",children:[{value:"Generate Keys / Use existing key",id:"generate-keys--use-existing-key",children:[]},{value:"TLBC-Node configuration",id:"tlbc-node-configuration",children:[]},{value:"Relay configuration",id:"relay-configuration",children:[]},{value:"Setup Initial Database",id:"setup-initial-database",children:[]},{value:"Test the Installation",id:"test-the-installation",children:[]},{value:"Useful commands",id:"useful-commands",children:[]},{value:"Removing all containers",id:"removing-all-containers",children:[]}]},{value:"Next Steps",id:"next-steps",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"About this tutorial")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"All commands in this tutorial should be run from the ",Object(i.b)("inlineCode",{parentName:"p"},"/docker/trustlines/tlbc")," folder."),Object(i.b)("p",{parentName:"div"},"The tutorial was tested on Ubuntu 20.04 with Docker 19.03. The steps should work on other Linux versions and Mac,\nbut you'll most probably have to slightly modify some commands."))),Object(i.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You need a machine with at least ",Object(i.b)("strong",{parentName:"p"},"2GB(preferably 4GB)")," of RAM. Running this on a machine with less than 2GB of RAM will\nfail."))),Object(i.b)("p",null,"The ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/trustlines-protocol/relay/tree/master/docker/trustlines/tlbc"}),"docker/trustlines/tlbc")," directory in the relay\nrepository contains the files needed to start components of the trustlines protocol (tlbc-node, relay, indexer) via\ndocker-compose. Following these setup instructions will give you a:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"TLBC-Node with OpenEthereum"),Object(i.b)("li",{parentName:"ul"},"Py-eth-index connected to the TLBC-Node"),Object(i.b)("li",{parentName:"ul"},"Relay instance connected to the TLBC-Node")),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The config by default exposes port 5000 to connect to the relay. It is advised to actually\nput a proxy (nginx, caddy, apache or traefik) in front of the relay server."))),Object(i.b)("h2",{id:"services"},"Services"),Object(i.b)("p",null,"The docker-compose file contains service definitions for the following services:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"db: A service running a postgres server. The postgres files will be\nstored in the ",Object(i.b)("inlineCode",{parentName:"p"},"postgres-data")," docker volume.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"tlbc: A service running a modified OpenEthereum node for the trustlines\nblockchain. The blockchain data will be stored in the\n",Object(i.b)("inlineCode",{parentName:"p"},"blockchain-data")," docker volume.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"index: A service running py-eth-index, which synchronizes certain\ninformation from OpenEthereum into the postgres database.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"relay: The relay server itself."))),Object(i.b)("p",null,"To find the location of the volumes on the system you can run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker volume ls\n")),Object(i.b)("p",null,"This will list the created volumes. Then you can execute:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker volume inspect --format '{{ .Mountpoint }}' VOLUME_NAME\n")),Object(i.b)("p",null,"This will give you the path to the volume data."),Object(i.b)("h2",{id:"setup"},"Setup"),Object(i.b)("p",null,"We need to do some initial setup and configuration for the system to work. You\nneed to provide the ",Object(i.b)("inlineCode",{parentName:"p"},"addresses.json")," file, which should be put in the directory\nalongside the ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"addresses.json")," file specifies which currency networks your py-eth-index & relay instance are\ngoing to index. If you want to run your relay only with a set of particular currency networks\nadapt the file accordingly."))),Object(i.b)("p",null,"If you want the Trustlines Blockchain with the official set of currency networks, you can run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cp ../../../config/addresses_tlbc.json ./addresses.json\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"addresses.json")," file also includes references to the identity related contracts."))),Object(i.b)("h3",{id:"generate-keys--use-existing-key"},"Generate Keys / Use existing key"),Object(i.b)("p",null,"To run the relay you need an account with TLC to pay for the transactions.\nIf you have one, use your existing keystore file."),Object(i.b)("p",null,"If you don't have one, you can generate a new account with the ",Object(i.b)("inlineCode",{parentName:"p"},"contract-deploy-tools")," and fund that account with TLC coins\n(through metamask for example)"),Object(i.b)("p",null,"To generate a new keystore file with the ",Object(i.b)("inlineCode",{parentName:"p"},"contract-deploy-tools")," you need python3 installed on your system (default on Ubuntu)\nand pip3. If pip3 is missing on your machine install it with"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"apt install python3-pip\n")),Object(i.b)("p",null,"If python3 and pip3 are installed you can run the following to install the ",Object(i.b)("inlineCode",{parentName:"p"},"contract-deploy-tools"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"python3 -m pip install contract-deploy-tools\n")),Object(i.b)("p",null,"Once complete generate the ",Object(i.b)("inlineCode",{parentName:"p"},"keystore.json")," file by running:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"deploy-tools generate-keystore\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If the ",Object(i.b)("inlineCode",{parentName:"p"},"deploy-tools")," fails with ",Object(i.b)("inlineCode",{parentName:"p"},"Command not found"),". You'll have to modify your ",Object(i.b)("inlineCode",{parentName:"p"},"PATH"),"."))),Object(i.b)("p",null,"We also need to store the password in clear text. Please create a file\n",Object(i.b)("inlineCode",{parentName:"p"},"pass.pwd")," containing only the password on the first line."),Object(i.b)("h3",{id:"tlbc-node-configuration"},"TLBC-Node configuration"),Object(i.b)("p",null,"Rename the ",Object(i.b)("inlineCode",{parentName:"p"},"node-config.dist.toml")," file to ",Object(i.b)("inlineCode",{parentName:"p"},"node-config.toml"),". Then\nchange the unlock address to the address that is specified in your keystore.json."),Object(i.b)("p",null,"To view the address in the keystore.json file you could cat the file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"cat keystore.json\n")),Object(i.b)("p",null,"This will print something like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'{"address": "ae44ee881fbbb3a8372f48d6107e61e7fbc08013", "crypto": {"cipher": "aes-128-ctr", "cipherparam....\n')),Object(i.b)("p",null,"Copy the address and add a ",Object(i.b)("inlineCode",{parentName:"p"},"0x")," to it and add it to the node-config.toml."),Object(i.b)("h3",{id:"relay-configuration"},"Relay configuration"),Object(i.b)("p",null,"Rename the ",Object(i.b)("inlineCode",{parentName:"p"},"config.dist.toml")," to ",Object(i.b)("inlineCode",{parentName:"p"},"config.toml"),". Then if necessary you can modify parameters in the\nconfig."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If you are making modifications to any config files after you've started a docker image you'll have to\nstop the image, remove it and then start it again for the modifications to be applied."),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker stop CONTAINER_ID\ndocker rm CONTAINER_ID\n\ndocker-compose up --detach SERVICE_NAME\n")),Object(i.b)("p",{parentName:"div"},Object(i.b)("inlineCode",{parentName:"p"},"CONTAINER_ID")," is the ID of the container when you run ",Object(i.b)("inlineCode",{parentName:"p"},"docker ps"),". The ",Object(i.b)("inlineCode",{parentName:"p"},"SERVICE_NAME")," is the name of the service you\nwant to start as specified in the docker-compose.yaml file."))),Object(i.b)("h3",{id:"setup-initial-database"},"Setup Initial Database"),Object(i.b)("p",null,"We need to set up the database and import the ABIs for the index\nservice by running the following commands:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"docker-compose up -d db\nsleep 2\ndocker-compose run --rm index createtables\ndocker-compose run --rm index importabi\n")),Object(i.b)("p",null,"After that, you can start the system with ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose up -d"),",\nthough you have to wait for the blockchain node to sync with the\ntrustlines blockchain in order to have a fully functioning system."),Object(i.b)("p",null,"The account address that you've set up above will have to pay for\ntransactions. Please fund it with enough coins."),Object(i.b)("h3",{id:"test-the-installation"},"Test the Installation"),Object(i.b)("p",null,"Please try to run the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"curl http://localhost:5000/api/v1/version\n")),Object(i.b)("p",null,"It should print the relay version running on the server."),Object(i.b)("h3",{id:"useful-commands"},"Useful commands"),Object(i.b)("p",null,"A short list with helpful commands."),Object(i.b)("h4",{id:"printing-all-running-docker-containers"},"Printing all running docker containers"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker ps\n")),Object(i.b)("h4",{id:"stopping-all-running-containers"},"Stopping all running containers"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker stop $(docker ps -q)\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"-q")," prints only the running container ids in a list form."),Object(i.b)("h3",{id:"removing-all-containers"},"Removing all containers"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker rm $(docker ps -qa)\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"a")," flag stands for all containers, not just the running ones."),Object(i.b)("h4",{id:"printing-docker-logs"},"Printing docker logs"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"docker logs -f --tail 500 CONTAINER_NAME/CONTAINER_ID\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"-f")," flag stands for follow. Basically you won't just see the log, but the screen will update when new logs arrive.\n",Object(i.b)("inlineCode",{parentName:"p"},"--tail 500")," specifies to just print the last 500 lines. If you don't provide the ",Object(i.b)("inlineCode",{parentName:"p"},"tail")," argument depending on how long\nthe container has been running you can wait a lot of time till all the logs print on your screen."),Object(i.b)("h2",{id:"next-steps"},"Next Steps"),Object(i.b)("p",null,"Setup a reverse Proxy and prevent requests on port 5000 to connect directly to the relay.\nA good and easy proxy to install is ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://caddyserver.com/"}),"caddy"),". "))}b.isMDXComponent=!0},872:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),b=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=b(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=b(n),m=a,u=d["".concat(r,".").concat(m)]||d[m]||p[m]||i;return n?o.a.createElement(u,c(c({ref:t},s),{},{components:n})):o.a.createElement(u,c({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var s=2;s<i;s++)r[s]=n[s];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);