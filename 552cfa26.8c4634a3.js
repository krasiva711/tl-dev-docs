(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{239:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(8),o=(n(0),n(611)),i={layout:"blockchain",title:"Trustlines Blockchain",image:"assets/images/tlbc.jpg"},c={unversionedId:"tlbc",id:"tlbc",isDocsHomePage:!1,title:"Trustlines Blockchain",description:"- The Trustlines Blockchain Infrastructure",source:"@site/blockchain/tlbc.md",slug:"/tlbc",permalink:"/blockchain/tlbc",editUrl:"https://github.com/trustlines-protocol/tl-dev-docs/edit/master/blockchain/tlbc.md",version:"current",sidebar:"Blockchain",next:{title:"Trustlines Blockchain Nodes",permalink:"/blockchain/nodes"}},l=[{value:"The Trustlines Blockchain Infrastructure",id:"the-trustlines-blockchain-infrastructure",children:[{value:"TLBC and Laika",id:"tlbc-and-laika",children:[]},{value:"System Requirements",id:"system-requirements",children:[]},{value:"Security",id:"security",children:[]},{value:"Setup With the Quickstart Script",id:"setup-with-the-quickstart-script",children:[]},{value:"Setup With Docker",id:"setup-with-docker",children:[]},{value:"Setup Without Docker",id:"setup-without-docker",children:[]}]},{value:"Development",id:"development",children:[{value:"Build Own Image",id:"build-own-image",children:[]},{value:"Running Tests on Contracts",id:"running-tests-on-contracts",children:[]}]},{value:"access.laika.trustlines.foundation",id:"accesslaikatrustlinesfoundation",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#the-trustlines-blockchain-infrastructure"}),"The Trustlines Blockchain Infrastructure"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#tlbc-and-laika"}),"TLBC and Laika")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#system-requirements"}),"System Requirements")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#security"}),"Security")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#setup-with-the-quickstart-script"}),"Setup With the Quickstart Script")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#setup-with-docker"}),"Setup With Docker"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#blockchain-node"}),"Blockchain Node")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#netstats-client"}),"Netstats Client")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#monitor"}),"Monitor")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#bridge"}),"Bridge")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#setup-without-docker"}),"Setup Without Docker")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#development"}),"Development"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#build-own-image"}),"Build Own Image")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#upload-image"}),"Upload Image")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#running-tests-on-contracts"}),"Running Tests on Contracts"))))),Object(o.b)("h2",{id:"the-trustlines-blockchain-infrastructure"},"The Trustlines Blockchain Infrastructure"),Object(o.b)("p",null,"Nodes of the Trustlines Blockchain run various applications:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The node of the blockchain itself"),Object(o.b)("li",{parentName:"ul"},"The monitor that checks if validators act honestly (optional)"),Object(o.b)("li",{parentName:"ul"},"The bridge between Ethereum and the Trustlines Blockchain (only run by validators)"),Object(o.b)("li",{parentName:"ul"},"The netstats client to report the node state to ",Object(o.b)("inlineCode",{parentName:"li"},"https://netstats.tlbc.trustlines.foundation")," (optional)")),Object(o.b)("p",null,"There are multiple ways to set each of these up. The most straightforward one by far is via our interactive quickstart\nscript. Finer control can be achieved by starting the components individually as Docker containers. Finally, it is also\npossible to avoid Docker altogether and run everything directly on the host machine."),Object(o.b)("p",null,"Before starting the installation process, please have a look at the following\nsections on the distinction between Laika and the Trustlines Blockchain, system\nrequirements, and security."),Object(o.b)("h3",{id:"tlbc-and-laika"},"TLBC and Laika"),Object(o.b)("p",null,"There are two different blockchains related to this project. The first one is\na testnet called Laika. The second one is considered to be the main net and\ncalled the Trustlines Blockchain or TLBC. The instructions within this document\nprimarily focus on the Trustlines Blockchain."),Object(o.b)("h3",{id:"system-requirements"},"System Requirements"),Object(o.b)("p",null,"Based on the experiences we have had on our long-running testnet Laika, we recommend at least 4GB of memory and 20GB of SSD\nstorage."),Object(o.b)("p",null,"Validators should make sure their node has a high uptime: Otherwise, they miss out on potential revenue and harm the\nnetwork by increasing average block intervals and time to finality."),Object(o.b)("p",null,"For block validation and creation, it is essential to make sure your host system has the correct time configuration. On\nmost systems, this should be the case by default. You can check the settings with ",Object(o.b)("inlineCode",{parentName:"p"},"timedatectl")," (look for\n",Object(o.b)("inlineCode",{parentName:"p"},'"System clock synchronized: yes"'),"). For more information, see for example the corresponding\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://help.ubuntu.com/lts/serverguide/NTP.html"}),"Ubuntu help page"),"."),Object(o.b)("p",null,"For the Docker installation modes, ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docker.com"}),"Docker")," needs to be installed and configured.\nFor the quickstart mode, ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.docker.com/compose/"}),"docker-compose")," needs to be installed as well.\nYou must have at least version ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/docker/compose/releases/tag/1.18.0"}),Object(o.b)("inlineCode",{parentName:"a"},"1.18.0"))," of ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose"),".\nPlease refer to the official documentation and make sure your user is added to the ",Object(o.b)("inlineCode",{parentName:"p"},"docker")," user group if you cannot\naccess root permissions to run containers."),Object(o.b)("h3",{id:"security"},"Security"),Object(o.b)("p",null,"For validators it is crucial to safely back up their private key. If they lose their key, they will not be able to"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"create any blocks or earn block rewards or"),Object(o.b)("li",{parentName:"ul"},"withdraw their stake on the main chain once it is unlocked.")),Object(o.b)("p",null,"Furthermore, it is advisable to keep the amount of funds stored in the validator account small by regularly sending the\nnewly earned income to a different account (e.g., a cold wallet stored on a different machine)."),Object(o.b)("h3",{id:"setup-with-the-quickstart-script"},"Setup With the Quickstart Script"),Object(o.b)("p",null,"The quickstart script will set up the blockchain node and the monitor as well as optionally the bridge and netstats\nclients. It allows importing a private key in order to act as a validator. In addition, it will start a\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.docker.com/r/containrrr/watchtower"}),"watchtower")," to automatically update the Docker containers when newer versions\nbecome available (e.g. for bug fixes or network forks)."),Object(o.b)("p",null,"To fetch and run the most recent version of the quickstart script for the Trustlines Blockchain, execute the following command on your machine:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"bash <(curl -L quickstart.tlbc.trustlines.foundation)\n")),Object(o.b)("p",null,"If you want a quickstart setup for the Laika testnet, use the following command instead:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"bash <(curl -L quickstart.laika.trustlines.foundation)\n")),Object(o.b)("p",null,"The script is interactive and will ask you which components to set up. Once the\nsetup is complete, the various components will run in the background in the form\nof Docker containers. Configuration and chain data can be found in the\n",Object(o.b)("inlineCode",{parentName:"p"},"tlbc")," directory placed in the current working directory (",Object(o.b)("inlineCode",{parentName:"p"},"trustlines")," in case of a Laika setup). It is possible\nto customize the own setup by editing those configuration files. This goes for\nthe configuration of the different components, as well as the composition of the\nDocker containers. If an optional component has not been set up on an earlier\nrun, it can be added later by executing the quickstart script again."),Object(o.b)("p",null,"Executing the script again is safe: No configuration will be overridden without\nasking, in case the user has changed them itself. If conflicting configuration\nupdates occur, they are shown to the user who can ask to see a diff of the\nchanges."),Object(o.b)("h3",{id:"setup-with-docker"},"Setup With Docker"),Object(o.b)("p",null,"A more explicit way of setting up the various components is starting the Docker containers manually as described here.\nTo keep commands as concise as possible, only the most basic options are provided. You might want to set additional\nones, e.g., container names or restart policies."),Object(o.b)("p",null,"Alternatively, you could also use the quickstart script and adjust the setup afterwards with commands similar to the\nfollowing ones."),Object(o.b)("h4",{id:"blockchain-node"},"Blockchain Node"),Object(o.b)("p",null,"The blockchain image is a standard Parity client with a custom configuration for the Trustlines Blockchain. It also\naccepts a few additional command line options as described in the help message:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker run --rm trustlines/tlbc-node:release --help\n\n\n NAME\n   Parity Wrapper\n\n SYNOPSIS\n   parity_wrapper.sh [-r] [role] [-a] [address] [-p] [arguments]\n\n ...\n")),Object(o.b)("p",null,"Before starting the node, create a Docker network to conveniently allow other containers to easily connect to it:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker network create network-tlbc\n")),Object(o.b)("p",null,"When running the node, you typically want to forward necessary ports to the host so that Parity can find and connect to\npeers. Additionally, you might want to mount some volumes to persist configuration and chain data. For instance, to run\na non-validator node:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ mkdir -p tlbc/databases/tlbc tlbc/config tlbc/enode tlbc/shared\n$ docker run -d --name tlbc-node --network network-tlbc \\\n    -v $(pwd)/tlbc/databases/tlbc:/data \\\n    -v $(pwd)/tlbc/config:/config/custom \\\n    -v $(pwd)/tlbc/enode:/config/network \\\n    -v $(pwd)/tlbc/shared:/shared/ \\\n    -p 30302:3030r -p 30302:30302/udp \\\n    trustlines/tlbc-node:release\n")),Object(o.b)("p",null,"If you are a validator, this sequence of commands will supply Parity with your keystore file, password, and address so\nthat it can produce blocks:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ mkdir -p tlbc/databases/tlbc tlbc/config/keys/tlbc tlbc/enode tlbc/shared\n$ cp /path/to/your/keystore/file.json tlbc/config/keys/tlbc/account.json\n$ echo "<passphrase_for_keystore_file>" > tlbc/config/pass.pwd\n$ docker run -d --name tlbc-node --network network-tlbc \\\n    -v $(pwd)/tlbc/databases/tlbc:/data \\\n    -v $(pwd)/tlbc/config:/config/custom \\\n    -v $(pwd)/tlbc/enode:/config/network \\\n    -v $(pwd)/tlbc/shared:/shared/ \\\n    -p 30302:30302 -p 30302:30302/udp \\\n    trustlines/tlbc-node:release\n')),Object(o.b)("h4",{id:"netstats-client"},"Netstats Client"),Object(o.b)("p",null,"The netstats client reports the state of your node to the\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://netstats.tlbc.trustlines.foundation/"}),"netstats page")," that gives a rough overview of the current network state.\nIt is an optional component which helps the community by providing information on your running node to a central server."),Object(o.b)("p",null,"To participate, you first need to request credentials managed by the Trustlines Foundation. Please email\n",Object(o.b)("inlineCode",{parentName:"p"},"netstats@trustlines.foundation")," to do so."),Object(o.b)("p",null,"Once you have your credentials, create a file ",Object(o.b)("inlineCode",{parentName:"p"},"tlbc/netstats-env")," with the following contents:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"WS_USER=username-as-provided-by-the-foundation\nWS_PASSWORD=password-as-provided-by-the-foundation\nINSTANCE_NAME=please-choose-a-nice-name-here\n")),Object(o.b)("p",null,"If you want to be publicly displayed as a validator, add the following line at the end:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"HIDE_VALIDATOR_STATUS=false\n")),Object(o.b)("p",null,"Now, the netstats client can be started with"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker run -d --name netstats-client --network network-tlbc \\\n    --env-file tlbc/netstats-env \\\n    -e RPC_HOST=tlbc-node \\\n    -e RPC_PORT=8545 \\\n    trustlines/netstats-client:release\n")),Object(o.b)("h4",{id:"monitor"},"Monitor"),Object(o.b)("p",null,"The monitor watches the blockchain and makes sure that validators are online and do not equivocate. Every node in the\nnetwork should run it and users should regularly check for reports of misbehaving validators."),Object(o.b)("p",null,"Assuming the blockchain node was configured as described above, this command will start the monitor:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ mkdir -p tlbc/monitor/reports tlbc/monitor/state\n$ docker run -d --name tlbc-monitor --network network-tlbc \\\n    -v $(pwd)/tlbc/shared:/config \\\n    -v $(pwd)/tlbc/monitor/state:/state \\\n    -v $(pwd)/tlbc/monitor/reports:/reports \\\n    trustlines/tlbc-monitor:release \\\n    -c /config/trustlines-spec.json -r /reports -d /state \\\n    -u http://tlbc-node:8545\n")),Object(o.b)("h4",{id:"bridge"},"Bridge"),Object(o.b)("p",null,"Validators of the Trustlines Blockchain have to run the bridge that converts TLN tokens on the Ethereum chain to TLC\ntokens on the Trustlines Blockchain. Non-validators should not run a bridge node."),Object(o.b)("p",null,"The bridge requires an Ethereum mainnet node which can be a light client. To start one, execute"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker network create network-ethereum\n$ mkdir -p tlbc/databases/mainnet\n$ docker run -d --name mainnet-node --network network-ethereum \\\n    -v $(pwd)/tlbc/databases/mainnet:/data/database \\\n    --user root \\\n    ethereum/client-go:stable \\\n    --rpc --rpcaddr 0.0.0.0 --nousb --ipcdisable --syncmode light \\\n    --datadir /data/database --rpccorsdomain * --rpcvhosts=*\n")),Object(o.b)("p",null,"Now, write a configuration file for the bridge node and store it in ",Object(o.b)("inlineCode",{parentName:"p"},"tlbc/bridge-config.toml"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-toml"}),'[foreign_chain]\nrpc_url = "<http://mainnet-node:8545>"\ntoken_contract_address = "0x679131F591B4f369acB8cd8c51E68596806c3916"\nbridge_contract_address = "0x18BDC736b23Ff7294BED9fa988a1443357C7B0ed"\nevent_fetch_start_block_number = 8932341\n\n[home_chain]\nrpc_url = "<http://tlbc-node:8545>"\nbridge_contract_address = "0x0000000000000000000000000000000000000401"\nevent_fetch_start_block_number = 0\n\n[validator_private_key]\nkeystore_path = "/config/keys/tlbc/account.json\nkeystore_password_path = "/config/pass.pwd"\n')),Object(o.b)("p",null,"Note that the keystore path is not an actual path on the host machine, but rather in the bridge container.\nThe container will have to connect to both of the Docker networks and access the config directory.\nTherefore, the command looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker run -d --name bridge-client --network network-tlbc --network network-ethereum \\\n    -v $(pwd)/tlbc/config:/config \\\n    -v $(pwd)/tlbc/bridge-config.toml:/config/bridge-config.toml \\\n    trustlines/bridge:release \\\n    -c /config/bridge-config.toml\n")),Object(o.b)("h3",{id:"setup-without-docker"},"Setup Without Docker"),Object(o.b)("p",null,"We refer to the documentation of the individual components:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://wiki.parity.io/Parity-Ethereum"}),"Parity")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/trustlines-protocol/ethstats-client"}),"Netstats")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/trustlines-protocol/tlbc-monitor"}),"Monitor")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/trustlines-protocol/blockchain/tree/master/tools/bridge"}),"Bridge"))),Object(o.b)("p",null,"For the Trustlines Blockchain node, make sure it uses the correct chain\nspecification file (",Object(o.b)("inlineCode",{parentName:"p"},"./chain/tlbc/tlbc-spec.json"),"), that the right TCP and UDP\nports are used (30302), and that the JSON RPC APIs ",Object(o.b)("inlineCode",{parentName:"p"},"web3"),", ",Object(o.b)("inlineCode",{parentName:"p"},"eth"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"net")," are\nenabled."),Object(o.b)("h2",{id:"development"},"Development"),Object(o.b)("h3",{id:"build-own-image"},"Build Own Image"),Object(o.b)("p",null,"To build the ",Object(o.b)("em",{parentName:"p"},"Docker")," image, checkout this repository and run ",Object(o.b)("inlineCode",{parentName:"p"},"docker build")," with your preferred tag name. As the context of\nthe build must be the project root, the path to the ",Object(o.b)("inlineCode",{parentName:"p"},"Dockerfile")," has to be specified manually."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone https://github.com/trustlines-protocol/blockchain\n$ docker build -f ./chain/laika/Dockerfile -t MY_TAGNAME ./chain\n$ docker run ... MY_TAGNAME ...\n")),Object(o.b)("h3",{id:"running-tests-on-contracts"},"Running Tests on Contracts"),Object(o.b)("p",null,"First, install the solidity compiler ",Object(o.b)("inlineCode",{parentName:"p"},"solc")," for compiling the contracts. You\ncan follow the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://solidity.readthedocs.io/en/v0.5.8/installing-solidity.html"}),"official installation\ndocumentation"),". Make sure that you install the version ",Object(o.b)("inlineCode",{parentName:"p"},"0.5.8"),".\nFrom the root directory of the repository you can run the tests by calling ",Object(o.b)("inlineCode",{parentName:"p"},"make test contracts"),". This will create a virtual Python environment, install the\ndependencies, compile the contracts and run the tests."),Object(o.b)("h2",{id:"accesslaikatrustlinesfoundation"},"access.laika.trustlines.foundation"),Object(o.b)("p",null,"The Trustlines Foundation hosts a publically accessible node for the\nLaika Testnet."),Object(o.b)("p",null,"You can access it via the following URL:\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://access.laika.trustlines.foundation"}),"https://access.laika.trustlines.foundation")))}b.isMDXComponent=!0},611:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return p}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=b(n),h=a,p=u["".concat(i,".").concat(h)]||u[h]||d[h]||o;return n?r.a.createElement(p,c(c({ref:t},s),{},{components:n})):r.a.createElement(p,c({ref:t},s))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);