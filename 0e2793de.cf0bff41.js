(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{658:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(8),a=(n(0),n(658)),i={title:"Testing"},c={unversionedId:"develop/testing",id:"version-1.3.0/develop/testing",isDocsHomePage:!1,title:"Testing",description:"For testing we use pytest with an ethereum tester plugin. The tests can",source:"@site/contracts_versioned_docs/version-1.3.0/develop/testing.md",slug:"/develop/testing",permalink:"/contracts/develop/testing",editUrl:"https://github.com/trustlines-protocol/tl-dev-docs/edit/master/contracts_versioned_docs/version-1.3.0/develop/testing.md",version:"1.3.0",sidebar:"version-1.3.0/Contracts",previous:{title:"Dependencies",permalink:"/contracts/develop/dependencies"},next:{title:"Release",permalink:"/contracts/develop/release"}},s=[],l={rightToc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"For testing we use pytest with an ethereum tester plugin. The tests can\nbe run with ",Object(a.b)("inlineCode",{parentName:"p"},"make test"),". Please note that this will recompile all contracts\nautomatically, there's no need to call ",Object(a.b)("inlineCode",{parentName:"p"},"make compile")," manually."),Object(a.b)("p",null,"You can also run end2end tests that will test how the contracts, ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/trustlines-protocol/relay"}),"relay"),",\nand ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/trustlines-protocol/clientlib"}),"clientlib"),"\nwork together. For more information about the end2end tests, see\n",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/trustlines-protocol/end2end"}),"the end2end repository")))}p.isMDXComponent=!0}}]);