(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{246:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(8),r=(n(0),n(661)),o={title:"Android"},l={unversionedId:"known_issues/android",id:"known_issues/android",isDocsHomePage:!1,title:"Android",description:"General Issues",source:"@site/mobileapp/known_issues/android.md",slug:"/known_issues/android",permalink:"/mobileapp/known_issues/android",editUrl:"https://github.com/trustlines-protocol/tl-dev-docs/edit/master/mobileapp/known_issues/android.md",version:"current",sidebar:"mobileapp",previous:{title:"Javascript",permalink:"/mobileapp/known_issues/javascript"},next:{title:"iOS",permalink:"/mobileapp/known_issues/ios"}},c=[{value:"General Issues",id:"general-issues",children:[]},{value:"Build",id:"build",children:[]},{value:"React Native Modules",id:"react-native-modules",children:[]},{value:"Android Simulator",id:"android-simulator",children:[]}],s={rightToc:c};function d(e){var t=e.components,o=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"general-issues"},"General Issues"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"When trying to build the app via fastlane and this error occurs:\n",Object(r.b)("inlineCode",{parentName:"p"},"[...]/android_gradle_build.json (No such file or directory)"),"\nyou have to open the app in Android Studio. While opening the project Android Studio does a sync and ",Object(r.b)("strong",{parentName:"p"},"refreshes linked c++ libraries"),". This can also be triggered manually when Studio is open via ",Object(r.b)("inlineCode",{parentName:"p"},"MainMenu > Build > Refresh Linked C++ Projects"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If Android Studio refuses to sync successfully try invalidate caches and restart by navigating to ",Object(r.b)("inlineCode",{parentName:"p"},"File")," -> ",Object(r.b)("inlineCode",{parentName:"p"},"Invalidate Caches/Restart")))),Object(r.b)("h2",{id:"build"},"Build"),Object(r.b)("p",null,"As with the ios project, we have 3 different targets to build:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"develop"),Object(r.b)("li",{parentName:"ul"},"staging"),Object(r.b)("li",{parentName:"ul"},"production")),Object(r.b)("p",null,"Each target can be build in ",Object(r.b)("inlineCode",{parentName:"p"},"debug")," or ",Object(r.b)("inlineCode",{parentName:"p"},"release")," config:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"developDebug, stagingDebug, productionDebug, developRelease, stagingRelease and productionRelase")),Object(r.b)("p",null,"This is reflected in the androids projects src structure:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Screenshot",src:n(723).default})),Object(r.b)("p",null,"Whatever can be found in ",Object(r.b)("inlineCode",{parentName:"p"},"debug")," will be included in all Debug versions:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"developDebug, stagingDebug, productionDebug")),Object(r.b)("p",null,"Files in ",Object(r.b)("inlineCode",{parentName:"p"},"staging")," are included in"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"stagingDebug, stagingRelease")),Object(r.b)("p",null,"and so on."),Object(r.b)("h2",{id:"react-native-modules"},"React Native Modules"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The instructions here apply only to new modules. The modules/libraries already installed in the Trustlines app are correctly\nlinked and generally you shouldn't have to do any of the described actions below."))),Object(r.b)("p",null,"Some React Native libraries often come with platform-specific (native) code. Since React Native 0.60 the native code\ncan be installed by a process called autolinking. Autolinking means that you as a developer don't have to do anything\nelse than ",Object(r.b)("inlineCode",{parentName:"p"},"yarn install"),'. The rest is "automagically" taken care of. '),Object(r.b)("p",null,"Some native libraries though still don't support auto-linking and because of that after installing a library\nthat has native code you'll need to run ",Object(r.b)("inlineCode",{parentName:"p"},"react-native link <packageName>")," to install the native code. "),Object(r.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"react-native link")," should not be called without the packages name!")))),Object(r.b)("p",null,"After calling ",Object(r.b)("inlineCode",{parentName:"p"},"react-native link <packageName>")," react native modules are included in ",Object(r.b)("inlineCode",{parentName:"p"},"<root>/settings.gradle")," and ",Object(r.b)("inlineCode",{parentName:"p"},"<root>/app/build.gradle")),Object(r.b)("p",null,"To better illustrate this let's look at an example. At the time of writing the ",Object(r.b)("inlineCode",{parentName:"p"},"react-native-safe-area-context")," doesn't support\nautolinking. If you install it with ",Object(r.b)("inlineCode",{parentName:"p"},"yarn add react-native-safe-area-context")," and afterwards run ",Object(r.b)("inlineCode",{parentName:"p"},"react-native link react-native-safe-area-context")," this will add the following code:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java",metastring:'title="<root>/settings.gradle"',title:'"<root>/settings.gradle"'}),"...\ninclude ':react-native-safe-area-context'\nproject(':react-native-safe-area-context').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-safe-area-context/android')\n...\n")),Object(r.b)("p",null,"and  referenced in"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java",metastring:'title="<root>/app/build.gradle"',title:'"<root>/app/build.gradle"'}),"...\ndependencies {\n    ...\n    implementation project(':react-native-safe-area-context')\n    ...\n}\n...\n")),Object(r.b)("p",null,"How to completely integrate a native module might vary and usually is described in the modules repository description. Always recheck / diff your files for changes after you call ",Object(r.b)("inlineCode",{parentName:"p"},"react-native link <packageName>")," and if it reflects what you anticipated."),Object(r.b)("h2",{id:"android-simulator"},"Android Simulator"),Object(r.b)("p",null,"When running the application in the android simulator, you can not easily use the camera and interact with the app as you would do with a physical phone. You can send remote commands to the simulator though.\nTo open the QR code link to create a new trustline, you can start the VIEW intent, passing the URL copied from the QR code screen."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},'adb shell am start -a "android.intent.action.VIEW" -d "<QR Code URL here>"')),Object(r.b)("p",null,"This basically does the same as clicking the link inside the messages app."))}d.isMDXComponent=!0},661:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),d=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=d(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=d(n),u=a,m=b["".concat(o,".").concat(u)]||b[u]||p[u]||r;return n?i.a.createElement(m,l(l({ref:t},s),{},{components:n})):i.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},723:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/android1-3f9bc2c0a8ba103db6121b101032e838.png"}}]);